{"data":{"allMarkdownRemark":{"totalCount":8,"edges":[{"node":{"id":"bd47edff-59de-5c77-9cfe-eb6e67837825","timeToRead":3,"frontmatter":{"title":"What do I listen to while programming?","date":"September 12th, 2018","tags":["Music"]},"fields":{"slug":"/blog/music-for-programming/","readingTime":{"text":"2 min read"}},"excerpt":"Music is, of course, a slightly touchy and very subjective topic. Especially when discussing what to listen to while doing various tasks. Though for me personally, I have clear-cut answers to what works best for me while programming. To start with, I typically avoid anything containing vocals. I like massive ambient soundscapes with intricate details. It seems to stimulate the logic-processing parts of my brain (whether or not that's true, I have no idea). But it definitely keeps me productive. Tracks like this one by Shulman are among my favorites. I also prefer listening to longer tracks or full album mixes instead of single tracks. This is because when tracks are constantly changing, I feel like my mood and productivity is also changing. It takes a little bit to get situated into a‚Ä¶"}},{"node":{"id":"66114ea1-06dc-5679-a01a-d2c9bd58c53c","timeToRead":7,"frontmatter":{"title":"Let's talk about my first day with Gatsby","date":"September 11th, 2018","tags":["Gatsby","JavaScript"]},"fields":{"slug":"/blog/first-day-with-gatsby/","readingTime":{"text":"8 min read"}},"excerpt":"It all started with a single tweet... Gatsby had been on my radar for a long time, to say the least. I had first checked it out when it was still what seemed to be a side project for  Kyle Mathews . I tried it out and happily gave it a star on GitHub. It was a nice experience, but nothing that I was exceptionally excited about. This was all mid-2016 when JavaScript-Fatigue‚Ñ¢ was still very much at its peak. For that reason alone, I was apprehensive to fully adopt such an infantile library. Shortly after that, however, I saw this tweet from Kyle Mathews. At that moment, Gatsby had fully piqued my interest. It definitely seemed to be a risky move to an outsider, but I had seen Kyle's work and admired his dedication to the project, so I was fully interested to see where this would go‚Ä¶"}},{"node":{"id":"774ac4a3-2a31-5312-8307-ea5ca46897c7","timeToRead":1,"frontmatter":{"title":"My first Gatsby plugin: gatsby-remark-embed-soundcloud","date":"September 10th, 2018","tags":["Open Source","JavaScript","Gatsby"]},"fields":{"slug":"/blog/gatsby-remark-embed-soundcloud/","readingTime":{"text":"2 min read"}},"excerpt":"I recently dove deep into the world of  GatsbyJS  and have been absolutely loving every minute of it (post about that coming soon). But one of the first things I wanted to do in order to really get a feel for the engine, was to write my own plugin for it. After traversing the  official plugin list , I noticed that there wasn't yet an automatic SoundCloud embed yet. Since I use remark for rendering my Gatsby blog, it only made sense to create a remark embed for SoundCloud. You can find the plugin along with the documentation  here . I wanted to make it dead-simple, so there is literally zero markup required on the user's part, just paste in your SoundCloud link and it will automatically generate an embed code for it. You can customize the size, color, and whether it autoplays when loading‚Ä¶"}},{"node":{"id":"d6d3847e-5a1b-5ac2-a159-140889c9cc7a","timeToRead":2,"frontmatter":{"title":"Why comma-dangle is important in your open source projects","date":"February 15th, 2017","tags":["JavaScript","Open Source"]},"fields":{"slug":"/blog/comma-dangle/","readingTime":{"text":"2 min read"}},"excerpt":"Let‚Äôs talk about  comma-dangle . More specifically, let‚Äôs talk about why you need to be using this eslint rule in your open source projects. Actually, scratch that. This is something that‚Äôs best learned through examples. Allow me to walk you through what happens when you don‚Äôt use the comma-dangle rule. The Example Okay, so let‚Äôs pretend we have an awesome open source project we just created called beer.js. Let‚Äôs go ahead and add some exports to our package See all the lines prefixed with a  ? Those signify new additions to our repo. For our initial commit, we‚Äôre gonna have   line additions and   deletions. Let‚Äôs go ahead and add another value to our beer object Now what happened here? We only added one value to our export, yet git is going to show   additions and   deletion. No doubt our‚Ä¶"}},{"node":{"id":"db3583ee-fba6-51ea-95f9-f8b1d303f84d","timeToRead":2,"frontmatter":{"title":"Should you use gitmoji in your commit messages?","date":"November 28th, 2016","tags":["Git"]},"fields":{"slug":"/blog/gitmoji/","readingTime":{"text":"3 min read"}},"excerpt":"tl;dr  not yet. üìù Semantic Commits v2.0 I love emoji . If you follow me on any social sites, you‚Äôre well aware of that fact. I love it so much, I even base my application choices on how well they support it (I‚Äôm looking at you,  VSCode  üòë). But the one place that I absolute adore using emoji in, is the CLI. For most non-millennial developers, that very idea may disturb you down to your very core. But you‚Äôre only fooling yourself if you honestly don‚Äôt see the benefit of having a massive library of standardized icons available at your disposal. That said, are emoji ready for the limelight in something as permanent as commit messages? Obviously if you read the tl;dr above, you already know my answer. But let‚Äôs talk about why. For being semantic, they‚Äôre extremely un-semantic. It‚Äôs easy to‚Ä¶"}},{"node":{"id":"3c55c3f6-25d8-5ab0-bd44-c4d4a4e15115","timeToRead":7,"frontmatter":{"title":"75% less mouse, 100% more productive ‚Äîa vim story","date":"November 16th, 2016","tags":["Editors"]},"fields":{"slug":"/blog/why-vim/","readingTime":{"text":"9 min read"}},"excerpt":"What if I told you I had a secret weapon that could make you a faster programmer‚Ä¶ would you believe me? What if I told you that part of the secret to becoming a faster programmer is removing one of your input devices from your computer? ‚Ä¶ You‚Äôre kidding me right? Not at all. In fact, I can work an entire 10 hour day without ever touching my mouse or trackpad while coding‚Ä¶ and so can you. In fact, this entire blog was developed without the use of a mouse ‚Äîother than testing in a web browser. What I‚Äôm referring to, is the vim way of working. I‚Äôm sure you‚Äôve used vim at least a few different times before. It‚Äôs that little text editor that you only use on your linux server and can never seem to figure out how to close or save a file. But it‚Äôs more than that... It's more than an editor. Vim is‚Ä¶"}},{"node":{"id":"ecca13f8-a0c8-595b-8369-7a19d2801b70","timeToRead":4,"frontmatter":{"title":"Monitoring BitTorrent Sync with Monit on Ubuntu 14.04 LTS","date":"January 20th, 2015","tags":["DevOps","Tutorial"]},"fields":{"slug":"/blog/btsync-monit/","readingTime":{"text":"5 min read"}},"excerpt":"Over the past few days, I've been doing tons of DevOps work. Lots of setting up server monitoring, security, and automation. Most recently I wanted to give monit a try, as I've heard some good things about it. I was able to install it and get it up and running pretty hassle-free. I added in a few process checks for nginx, php-fpm, and postgres and it instantly was able to start tracking those processes for me. If you've gone through some of my other posts, you might remember a guide that I wrote about settings up BitTorrent Sync on a remote server, well today I'm going to expand on that a bit and add BitTorrent sync into my monit checks! There were multiple apparent walls that I was going to run into, as BitTorrent sync wasn't exactly written to be placed on a web server, so it lacks a few‚Ä¶"}},{"node":{"id":"0357bf05-5f47-56a9-8cc8-b3e3dbfe20ba","timeToRead":5,"frontmatter":{"title":"A Complete Guide to Creating Your Own Private Dropbox-like Server","date":"November 12th, 2013","tags":["DevOps","Tutorial"]},"fields":{"slug":"/blog/private-dropbox-server-btsync/","readingTime":{"text":"6 min read"}},"excerpt":"The problem: Your data isn‚Äôt safe in the cloud On a daily basis, many people are constantly backing up files on their personal Dropbox drive. While there‚Äôs really nothing wrong with this, what would happen if Dropbox were to get hacked? I‚Äôm sure nobody saw it coming when  PlayStation Network got hacked , yet, around 77 million people had their personal information stolen. What would happen if that same thing happened to Dropbox, where millions of people store sensitive data? Sure this is probably an extreme case, but one that hits closer to home would be the recent unveiling of project PRISM. Do you really want the National Security Agency (NSA) to have access to your data? Of course there‚Äôs still risk of your own personal servers getting hacked or monitored by the NSA, but a data‚Ä¶"}}]}},"pageContext":{}}